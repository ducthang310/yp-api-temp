apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "yc-product-service.fullname" . }}
  labels:
    app: {{ include "yc-product-service.name" . }}
    environment: {{ .Values.environment_name }}
    costCenter: {{ .Values.cost_center }}
{{ include "yc-product-service.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "yc-product-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app: {{ include "yc-product-service.name" . }}
        environment: {{ .Values.environment_name }}
        costCenter: {{ .Values.cost_center }}
        app.kubernetes.io/name: {{ include "yc-product-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}     
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      initContainers:
        - name: init-db-migrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["/bin/sh","-c"]
          args: ["yarn sequelize-cli db:migrate --env=$(ENV) && yarn sequelize-cli db:seed:all --env=$(ENV)"]
          env:
          {{- range $key, $value := $.Values.envs }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          resources:
            {{- toYaml .Values.jobs.resources | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: INSTANA_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          {{- range $key, $value := $.Values.envs }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}